name: CI
on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install black flake8 isort
      - name: Check formatting with Black
        run: black --check .
      - name: Check code style with Flake8
        run: flake8 src tests docs
      - name: Check imports with isort
        run: isort --check .
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        django-version: ['lts', 'latest']
        exclude:
          - python-version: '3.7'
            django-version: 'latest'
          - python-version: '3.11'
            django-version: 'lts'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install coverage[toml]
      - name: Install Django LTS
        if: ${{ matrix.django-version == 'lts' }}
        run: python -m pip install 'Django~=3.2.9'
      - name: Install Django latest
        if: ${{ matrix.django-version == 'latest' }}
        run: python -m pip install 'Django==4.1.*'
      - name: Run Django tests
        run: |
          python -m pip install -e .
          coverage run manage.py test
      - name: Display coverage summary
        run: coverage report
  docs:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .
          python -m pip install -r docs/requirements.txt
      - name: Check links in the documentation
        run: sphinx-build -b linkcheck docs docs/_build
      - name: Build the documentation
        run: sphinx-build -a -E -W --keep-going docs docs/_build
